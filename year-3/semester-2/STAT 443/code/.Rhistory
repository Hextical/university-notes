# install.packages("forecast")
# install.packages("fpp2")
library(fpp2)
library(forecast)
library(astsa)
cmort2 = cmort[seq(1, 508, by = 4)]
cmort2 = ts(cmort2, frequency = 13)
plot(cmort2)
fitAR <- auto.arima(cmort2)
fcast <- forecast(fitAR, PI = TRUE, h = 30)
autoplot(fcast)
fitNN <- nnetar(cmort2, lambda = 0)
autoplot(forecast(fitNN, h = 30))
# fcast <- forecast(fitNN, PI = TRUE, h = 30)
fitET <- ets(cmort2)
fcast <- forecast(fitET, h = 30, PI = T)
autoplot(fcast)
tr = round(length(cmort2) * 0.75)
cvSARIMA = 1:length(tr:(length(cmort2) - 1))
cvAUTOAR = 1:length(tr:(length(cmort2) - 1))
cvETS = 1:length(tr:(length(cmort2) - 1))
cvNNAR = 1:length(tr:(length(cmort2) - 1))
for (j in (tr:(length(cmort2) - 1))) {
print(j)
xSARIMA = tryCatch(
sarima.for(cmort2[1:j], 1, 2, 0, 2, 2, 0, 1, 13),
error = function(e) {
x = list()
x$pred = cmort2[j]
return(x)
}
)
cmort2j = ts(cmort2[1:j], frequency = 13)
xAAR = forecast(auto.arima(cmort2j), h = 1)$mean
xETS = forecast(ets(cmort2j), h = 1)$mean
autoplot(forecast(ets(cmort2j), h = 1))
xNNAR = forecast(nnetar(cmort2j, lambda = 0), h = 1)$mean
cvSARIMA[j - tr + 1] = xSARIMA$pred - cmort2[j + 1]
cvAUTOAR[j - tr + 1] = xAAR - cmort2[j + 1]
cvETS[j - tr + 1] = xETS - cmort2[j + 1]
cvNNAR[j - tr + 1] = xNNAR - cmort2[j + 1]
print(xETS - cmort2[j + 1])
print(xNNAR - cmort2[j + 1])
}
sum(cvSARIMA^2)
sum(cvETS^2)
sum(cvNNAR^2)
sum(cvAUTOAR^2)
fets <- function(x, h) {
forecast(ets(x), h = h)
}
fnn <- function(x, h) {
forecast(nnetar(x, lambda = 0), h = h)
}
far <- function(x, h) {
forecast(auto.arima(x), h = h)
}
cvETSat <- tsCV(cmort2, fets, h = 32)
cvNNARat <- tsCV(cmort2, fnn, h = 32)
cvAUTOARat <- tsCV(cmort2, far, h = 32)
sqrt(mean(cvETSat ^ 2, na.rm = TRUE))
sqrt(mean(cvNNARat ^ 2, na.rm = TRUE))
sqrt(mean(cvAUTOARat ^ 2, na.rm = TRUE))
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
n1.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
n1.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
