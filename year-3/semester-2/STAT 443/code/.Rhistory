ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
nl.acf(nyse ^ 2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
n1.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma<-function(x,h){ n<-length(x); h<-abs(h);x<-x-mean(x)
gamma<-sum(x[1:(n-h)]*x[(h+1):n])/n }
rho<-function(x,h) rho<-gamma(x,h)/gamma(x,0)
# acf function with significance bands of a strong white noise
nl.acf<-function(x,main=NULL,method='NP'){
n<-length(x); nlag<-as.integer(min(10*log10(n),n-1))
acf.val<-sapply(c(1:nlag),function(h) rho(x,h))
x2<-x^2
var<-1+(sapply(c(1:nlag),function(h) gamma(x2,h)))/gamma(x,0)^2
band<-sqrt(var/n)
minval<-1.2*min(acf.val,-1.96*band,-1.96/sqrt(n))
maxval<-1.2*max(acf.val,1.96*band,1.96/sqrt(n))
acf(x,xlab='Lag',ylab='SACR',ylim=c(minval,maxval),main=main)
lines(c(1:nlag),-1.96*band,lty=1,col='red')
lines(c(1:nlag),1.96*band,lty=1,col='red') }
nl.acf(nyse)
nl.acf(nyse^2)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
# autocorrelation function
library(astsa)
nyse = astsa::nyse
plot(nyse, main = "Returns of the New York Stock Exchange Index, 1984-1991")
acf(nyse)
gamma <- function(x, h) {
n <- length(x)
h <- abs(h)
x <- x - mean(x)
gamma <- sum(x[1:(n - h)] * x[(h + 1):n]) / n
}
rho <- function(x, h)
rho <- gamma(x, h) / gamma(x, 0)
# acf function with significance bands of a strong white noise
nl.acf <- function(x, main = NULL, method = 'NP') {
n <- length(x)
nlag <- as.integer(min(10 * log10(n), n - 1))
acf.val <- sapply(c(1:nlag), function(h)
rho(x, h))
x2 <- x ^ 2
var <- 1 + (sapply(c(1:nlag), function(h)
gamma(x2, h))) / gamma(x, 0) ^ 2
band <- sqrt(var / n)
minval <- 1.2 * min(acf.val, -1.96 * band, -1.96 / sqrt(n))
maxval <- 1.2 * max(acf.val, 1.96 * band, 1.96 / sqrt(n))
acf(
x,
xlab = 'Lag',
ylab = 'SACR',
ylim = c(minval, maxval),
main = main
)
lines(c(1:nlag), -1.96 * band, lty = 1, col = 'red')
lines(c(1:nlag), 1.96 * band, lty = 1, col = 'red')
}
nl.acf(nyse)
library(astsa)
source('~/Documents/university-notes/year-3/semester-2/STAT 443/code/8.7 - Identifying GARCH models.R', echo=TRUE)
summary(nyse.g10 <- garchFit( ~ arma(0, 0) + garch(1, 0), nyse))
library(fGarch)
nyse = astsa::nyse
plot(nyse)
summary(nyse.g10 <- garchFit( ~ arma(0, 0) + garch(1, 0), nyse))
for(j in (935:960)) {
par(mfrow = c(2, 1))
plot(window(nyse, start = 900, end = j),
ylim = c(-.22, .2),
ylab = "NYSE Returns")
plot(u[(900 + 1):(j + 1)], ylab = "1-step Volatility prediction", ylim =
c(0, max(u)))
invisible(readline(prompt = "Press [enter] to continue"))
}
library(fGarch)
nyse = astsa::nyse
plot(nyse)
summary(nyse.g10 <- garchFit(~ arma(0, 0) + garch(1, 0), nyse))
summary(nyse.g11 <- garchFit(~ arma(0, 0) + garch(1, 1), nyse))
summary(nyse.g12 <- garchFit(~ arma(0, 0) + garch(1, 2), nyse))
summary(nyse.g21 <- garchFit(~ arma(0, 0) + garch(2, 1), nyse))
summary(nyse.g22 <- garchFit(~ arma(0, 0) + garch(2, 2), nyse))
u = nyse.g11@sigma.t
for (j in (935:960)) {
par(mfrow = c(2, 1))
plot(window(nyse, start = 900, end = j),
ylim = c(-.22, .2),
ylab = "NYSE Returns")
plot(u[(900 + 1):(j + 1)], ylab = "1-step Volatility prediction", ylim =
c(0, max(u)))
invisible(readline(prompt = "Press [enter] to continue"))
}
library(astsa)
library(fpp2)
library(urca)
cmort2 = ts(cmort[seq(1, 508, by = 4)], frequency = 13)
plot(cmort2)
#KPSS Test
x = ts(rnorm(100))
plot(x)
ur.kpss(x)
summary(ur.kpss(x))
summary(ur.kpss(cmort2))
summary(ur.kpss(cmort2, type = "tau"))
plot(diff(cmort2))
acf(diff(cmort2))
summary(ur.kpss(diff(cmort2)))
plot(diff(cmort2, lag = 13))
acf(diff(cmort2, lag = 13))
summary(ur.kpss(diff(cmort2, lag = 13)))
auto.arima(cmort2)
# Chunk 1
library(fGarch)
library(urca)
x = as.timeSeries(data(LPP2005REC))
SwissPen = ts(x$LPP40)
# Chunk 2
par(mfrow = c(3, 1))
plot(SwissPen)
acf(SwissPen)
acf(SwissPen ^ 2)
# Chunk 3
summary(ur.kpss(SwissPen))
summary(ur.kpss(SwissPen ^ 2))
# Chunk 4
fit.ARCH <- garchFit( ~ arma(0, 0) + garch(5, 0), SwissPen, trace = F)
fit.GARCH <- garchFit( ~ arma(0, 0) + garch(1, 1), SwissPen, trace = F)
# Chunk 7
plot(abs(SwissPen))
points(fit.ARCH@sigma.t, col = "blue", cex = 0.1)
points(fit.GARCH@sigma.t, col = "red", cex = 0.1)
legend("topleft", c("ARCH(5)","GARCH(1,1)"), col = c("blue", "red"), lty = 3)
# Chunk 8
sigma_xSq.ARCH <- as.numeric(coef(fit.ARCH)[2] / (1 - sum(coef(fit.ARCH)[3:7])))
sigma_xSq.GARCH <- as.numeric(coef(fit.GARCH)[2] / (1 - sum(coef(fit.GARCH)[3:4])))
samp_var <- var(SwissPen)
# Chunk 9
plot(SwissPen, xlim = c(length(SwissPen) - 90, length(SwissPen) + 10))
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
2*predict(fit.ARCH, 10)$standardDeviation, col = "blue", cex = 0.1)
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
-2*predict(fit.ARCH, 10)$standardDeviation, col = "blue", cex = 0.1)
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
predict(fit.ARCH, 10)$meanForecast, col = "blue", cex = 0.1)
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
2*predict(fit.GARCH, 10)$standardDeviation, col = "red", cex = 0.1)
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
-2*predict(fit.GARCH, 10)$standardDeviation, col = "red", cex = 0.1)
lines(x = (length(SwissPen) + 1):(length(SwissPen) + 10),
predict(fit.GARCH, 10)$meanForecast, col = "red", cex = 0.1)
legend("topleft", c("ARCH(5)","GARCH(1,1)"), col = c("blue", "red"), lty = 1)
between_strata
# Chunk 1
N <- 242
N_f <- 242 * (1 / 22)
N_m <- 242 * (21 / 22)
N_i <- c(N_m, N_f)
male <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
female <- c(64, 65, 67, 65)
n_m <- length(male)
n_f <- length(female)
n_i <- c(n_m, n_f)
mu_m <- mean(male)
mu_f <- mean(female)
mu_i <- c(mu_m, mu_f) ; round(mu_i, 3)
sigma_m <- sd(male)
sigma_f <- sd(female)
sigma_i <- c(sigma_m, sigma_f) ; round(sigma_i^2, 3)
w_i <- c(21 / 22, 1 / 22)
mu <- sum(w_i * mu_i)
# Chunk 2
between_strata <- sum(w_i * (mu_i - mu) ^ 2) ; round(between_strata, 3)
within_strata <- sum(w_i * sigma_i ^ 2) ; round(within_strata, 3)
approx_sigma <- between_strata + within_strata ; round(approx_sigma, 3)
between_strata
# Chunk 1
N <- 242
N_f <- 242 * (1 / 22)
N_m <- 242 * (21 / 22)
N_i <- c(N_m, N_f)
male <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
female <- c(64, 65, 67, 65)
n_m <- length(male)
n_f <- length(female)
n_i <- c(n_m, n_f)
mu_m <- mean(male)
mu_f <- mean(female)
mu_i <- c(mu_m, mu_f) ; round(mu_i, 3)
sigma_m <- sd(male)
sigma_f <- sd(female)
sigma_i <- c(sigma_m, sigma_f) ; round(sigma_i^2, 3)
w_i <- c(21 / 22, 1 / 22)
mu <- sum(w_i * mu_i)
# Chunk 2
between_strata <- sum(w_i * (mu_i - mu) ^ 2) ; round(between_strata, 3)
within_strata <- sum(w_i * sigma_i ^ 2) ; round(within_strata, 3)
approx_sigma <- between_strata + within_strata ; round(approx_sigma, 3)
between_strata
w_i
w[1]*(mu_m-mu)^2+w[2](mu_f-mu)
w_i[1]*(mu_m-mu)^2+w_i[2](mu_f-mu)
w_i[1]*(mu_m-mu)^2+w_i[2]*(mu_f-mu)
between_strata^2
sampleM <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
sampleF <- c(64, 65, 67, 65)
sample <- c(sampleM, sampleF)
W_m <- 21 / 22
W_f <- 1 / 22
mu_m <- mean(sampleM)
mu_f <- mean(sampleF)
mu <- mean(sample)
between_strata <- W_m * (mu_m - mu) ^ 2 + W_f * (mu_f - mu) ^ 2
between_strata
between_strata <- sum(w*(mu_i-mu)^2)
sampleM <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
sampleF <- c(64, 65, 67, 65)
sample <- c(sampleM, sampleF)
W_m <- 21 / 22
W_f <- 1 / 22
w <- c(W_f, W_m)
mu_m <- mean(sampleM)
mu_f <- mean(sampleF)
mu_i <- c(mu_m, mu_f)
mu <- mean(sample)
between_strata <- sum(w*(mu_i-mu)^2)
between_strata
w*(mu_i-mu)^2
sampleM <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
sampleF <- c(64, 65, 67, 65)
sample <- c(sampleM, sampleF)
W_m <- 21 / 22
W_f <- 1 / 22
w <- c(W_m, W_f)
mu_m <- mean(sampleM)
mu_f <- mean(sampleF)
mu_i <- c(mu_m, mu_f)
mu <- mean(sample)
between_strata <- sum(w*(mu_i-mu)^2)
between_strata
# Chunk 1
N <- 242
N_f <- 242 * (1 / 22)
N_m <- 242 * (21 / 22)
N_i <- c(N_m, N_f)
male <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
female <- c(64, 65, 67, 65)
n_m <- length(male)
n_f <- length(female)
n_i <- c(n_m, n_f)
mu_m <- mean(male)
mu_f <- mean(female)
mu_i <- c(mu_m, mu_f) ; round(mu_i, 3)
sigma_m <- sd(male)
sigma_f <- sd(female)
sigma_i <- c(sigma_m, sigma_f) ; round(sigma_i^2, 3)
w_i <- c(21 / 22, 1 / 22)
mu <- mean(c(male,female))
# Chunk 2
between_strata <- sum(w_i * (mu_i - mu) ^ 2) ; round(between_strata, 3)
within_strata <- sum(w_i * sigma_i ^ 2) ; round(within_strata, 3)
approx_sigma <- between_strata + within_strata ; round(approx_sigma, 3)
# Chunk 1
N <- 242
N_f <- 242 * (1 / 22)
N_m <- 242 * (21 / 22)
N_i <- c(N_m, N_f)
male <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
female <- c(64, 65, 67, 65)
n_m <- length(male)
n_f <- length(female)
n_i <- c(n_m, n_f)
mu_m <- mean(male)
mu_f <- mean(female)
mu_i <- c(mu_m, mu_f) ; round(mu_i, 3)
sigma_m <- sd(male)
sigma_f <- sd(female)
sigma_i <- c(sigma_m, sigma_f) ; round(sigma_i^2, 3)
w_i <- c(21 / 22, 1 / 22)
mu <- sum(w_i * mu_i)
# Chunk 2
between_strata <- sum(w_i * (mu_i - mu) ^ 2) ; round(between_strata, 3)
within_strata <- sum(w_i * sigma_i ^ 2) ; round(within_strata, 3)
approx_sigma <- between_strata + within_strata ; round(approx_sigma, 3)
# Chunk 1
N <- 242
N_f <- 242 * (1 / 22)
N_m <- 242 * (21 / 22)
N_i <- c(N_m, N_f)
male <- c(72, 71, 68, 73, 69, 68, 72, 71, 75)
female <- c(64, 65, 67, 65)
n_m <- length(male)
n_f <- length(female)
n_i <- c(n_m, n_f)
mu_m <- mean(male)
mu_f <- mean(female)
mu_i <- c(mu_m, mu_f) ; round(mu_i, 3)
sigma_m <- sd(male)
sigma_f <- sd(female)
sigma_i <- c(sigma_m, sigma_f) ; round(sigma_i^2, 3)
w_i <- c(21 / 22, 1 / 22)
mu <- sum(w_i * mu_i)
# Chunk 2
between_strata <- sum(w_i * (mu_i - mu) ^ 2) ; round(between_strata, 3)
within_strata <- sum(w_i * sigma_i ^ 2) ; round(within_strata, 3)
approx_sigma <- between_strata + within_strata ; round(approx_sigma, 3)
